Metadata-Version: 2.1
Name: distributed-compy
Version: 1.0.49
Summary: Distributed hybrid (multi-node) heterogeneous (CPU + multi-GPU) computing library. Utilizes and requires CUDA toolkit, OpenMP, and OpenMPI.
Author: nellogan
Author-email: 1nel.logan1@gmail.com
License: MIT
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: GPU :: NVIDIA CUDA
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: System Administrators
Classifier: Intended Audience :: End Users/Desktop
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: POSIX
Classifier: Programming Language :: C++
Classifier: Programming Language :: Cython
Classifier: Programming Language :: Python
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: System :: Clustering
Classifier: Topic :: System :: Distributed Computing
Classifier: Topic :: Software Development
Classifier: Topic :: Software Development :: Code Generators
Classifier: Topic :: Utilities
Description-Content-Type: text/markdown
Requires-Dist: numpy

Distributed_compy is a distributed computing library that offers multi-threading, heterogeneous (CPU + mult-GPU), and 
multi-node (hybrid cluster -- more than one machine with CPU+GPUs) paradigms to leverage the processing power of a 
cluster. Cython is used to generate glue code for the core C/C++ functions and provide wrappers to call from Python.
Requires numpy, CUDA toolkit>=2.0, OpenMP, and OpenMPI. Note: this library does not use the popular mpi4py library.

Features:
* Get/set/configure bandwidths of local node or entire cluster whether by supplied numpy array or from binary data files
* Code generator to write temporary binary data files or python files that are to be executed on each node
* Execute mpirun command from master node with default env var or configurable hostfile
* Reduction sum with functionality scaling such as python naive sum, multi-thread reduction sum,
  multi-gpu reduction sum, heterogeneous reduction sum, and hybrid heterogeneous reduction sum.

Additional features such as other reduction operations, dot product, matrix multiplication, image processing kernels, 
neural networks, and finite element method functions are under consideration for future releases.
